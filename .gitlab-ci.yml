image:
  name: hashicorp/terraform:0.12.21
  entrypoint:
    - '/usr/bin/env'
    - 'PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'



stages:
  - Validate Terraform
  - Build and Push
  - Staging Plan
  - Staging Apply
  - Production Plan
  - Production Apply
  - Destroy



Validate Terraform:
  stage: Validate Terraform
  script:
    - cd deploy/
    - terraform init -backend=false #backend = false ensures
    - terraform validate
    - terraform fmt -check #check ensures code is not updated, and job fails if format fails
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME =~ /^(master|production)$/ || $CI_COMMIT_BRANCH =~ /^(master|production)$/'

Build and Push:
  stage: Build and Push
  script:
    - echo "Build and Push docker image"
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(master|production)$/'

Staging Plan:
  stage: Staging Plan
  script:
    - echo "Run Terraform Plan for Staging"
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(master|production)$/'

Staging Apply:
  stage: Staging Apply
  script:
    - echo "Run Terraform Apply for Staging"
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(master|production)$/'

Production Plan:
  stage: Production Plan
  script:
    - echo "Run Terraform Plan for Production"
  rules:
    - if: '$CI_COMMIT_BRANCH == "production"'

Production Apply:
  stage: Production Apply
  script:
    - echo "Run Terraform Apply for Production"
  rules:
    - if: '$CI_COMMIT_BRANCH == "production"'
      when: manual

Staging Destroy:
  stage: Destroy
  script:
    - echo "Run Terraform Destroy for Staging"
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /^(master|production)$/'
      when: manual

Production Destroy:
  stage: Destroy
  script:
    - echo "Run Terraform Destroy for Production"
  rules:
    - if: '$CI_COMMIT_BRANCH == "production"'
      when: manual
